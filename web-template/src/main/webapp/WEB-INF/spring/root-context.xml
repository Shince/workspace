<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	 
	<jpa:repositories base-package="com.github.shince.webtemplate.jpa.repository" />
 	
 	
	<!-- JPA related -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<beans:property name="entityManagerFactory" ref="entityManagerFactory" />
	</beans:bean>
	
	<beans:bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="location">
			<beans:value>
				classpath:jdbc.properties
			</beans:value>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<!--  <beans:property name="persistenceUnitName" value="ep-persistence-unit" /> 
		<beans:property name="persistenceProvider" ref="persistenceProvider" />   -->
		<property name="packagesToScan" value="com.github.shince.webtemplate.entities" />
		<beans:property name="jpaVendorAdapter">
			<beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<!-- <property name="database" value="HSQL" /> -->
				<beans:property name="showSql" value="false" />
				<beans:property name="database" value="MYSQL" />
				<beans:property name="generateDdl" value="true" />
			</beans:bean>
		</beans:property>
		<!-- 
		<property name="jpaProperties">
            <props>
                <prop key="hibernate.connection.driver_class">${driverClassName}</prop>
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/epdb</prop>
                <prop key="hibernate.connection.username">${username}</prop>
                <prop key="hibernate.connection.password">${password}</prop>
                <prop key="hibernate.c3p0.min_size">10</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
            </props>
        </property>
         -->
	</beans:bean>
	<!-- <beans:bean id="persistenceProvider" class="org.hibernate.ejb.HibernatePersistence" /> -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="username" value="${username}" />
		<beans:property name="password" value="${password}" />
		<beans:property name="driverClassName" value="${driverClassName}" />
		<beans:property name="url" value="${url}" />
	</beans:bean>
	
	
	<!-- i18n configuration -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
	  <beans:property name="basenames">
	    <beans:list>
			<beans:value>ValidationMessages</beans:value> <!-- default from hibernate -->	      
	      	<beans:value>validation</beans:value> <!-- customized override default -->
	      	<beans:value>message</beans:value>
	    </beans:list>
	  </beans:property>
	</beans:bean>
	
	<!-- aop configuration -->
	<aop:aspectj-autoproxy />
	
	 <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- one of the properties available; the maximum file size in bytes 200M --> 
       <!-- <property name="resolveLazily" value="true"/> -->   
        <property name="maxUploadSize" value="200000000" /> 
    </bean>
     
     <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="exceptionMappings">  
            <props>  
           </props>  
        </property>  
    </bean>  

	
</beans>